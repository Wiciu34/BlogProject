@using BlogProject.ViewModel
@model EditArticleViewModel


<h1>Edit Article</h1>
<form method="post" asp-action="Edit" enctype="multipart/form-data">
    <div class="form-group">
        <label asp-for="Title">Title</label>
        <input asp-for="Title" class="form-control" placeholder="Title">
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Content">Content</label>
        <textarea asp-for="Content" class="form-control" rows="3"></textarea>
        <span asp-validation-for="Content" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Category">Category</label>
        <input asp-for="Category" class="form-control" placeholder="Category">
        <span asp-validation-for="Category" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Image">Image</label>
        <input asp-for="Image" type="file" class="form-control" placeholder="Image">
        <span asp-validation-for="Image" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</form>

<a class="btn btn-outline-secondary" asp-route-id="@Model.Id" asp-action="BackToDetails">Cancel</a>

@section Scripts {
    <script>
        window.addEventListener("beforeunload", function (event) {
            fetch('@Url.Action("ReleaseLock", "Article", new {id = Model.Id})', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
            }).then(response => {

            });
        });
    </script>
}